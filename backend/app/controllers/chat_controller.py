from app.models.message import Message, MessageResponse
from app.services.chat_service import ChatService
from app.services.ollama_service import OllamaService
from app.models.request_models import CreateChatRequest, QueryRequest

class ChatController:
    def __init__(self):
        self._chat_service = ChatService()
        self._ollama_service = OllamaService()

    async def create_chat(self, request: CreateChatRequest):
        """Create a new chat thread"""
        chat_id = await self._chat_service.create_chat(request.title)
        return {"chat_id": chat_id}

    async def get_chats(self):
        """Get all chat threads"""
        chats = await self._chat_service.get_chats()
        return {"chats": chats}

    async def get_chat_messages(self, chat_id: str):
        """Get messages for a specific chat thread"""
        messages = await self._chat_service.get_chat_messages(chat_id)
        return {"messages": messages}

    async def handle_query(self, request: QueryRequest):
        """Process a query, get response from model, and store the conversation"""
        # Store user message
        await self._chat_service.add_message(
            request.chat_id,
            "user",
            request.prompt
        )

        # Get response from model
        try:
            response = await self._ollama_service.generate_response(
                model=request.model,
                prompt=request.prompt
            )
            
            # Store assistant response
            message = await self._chat_service.add_message(
                request.chat_id,
                "assistant",
                response
            )
            
            return {"response": response, "message": message}
        except Exception as e:
            return {"error": str(e)}

# Generated by Copilot
