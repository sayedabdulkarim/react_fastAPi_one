from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv
import os

# Load environment variables
load_dotenv()

class MongoDB:
    client: AsyncIOMotorClient = None
    db = None

    @classmethod
    async def connect_to_mongo(cls):
        cls.client = AsyncIOMotorClient(os.getenv("MONGO_URI"))
        cls.db = cls.client[os.getenv("MONGODB_DB_NAME")]
        print("Connected to MongoDB!")
        return cls.client

    @classmethod
    async def close_mongo_connection(cls):
        if cls.client:
            cls.client.close()
            print("MongoDB connection closed!")

# Generated by Copilot
