from fastapi import APIRouter, HTTPException
import logging
from ..utils.mongodb import MongoDB

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

router = APIRouter()

@router.get("/debug/mongo-test", response_model=dict)
async def test_mongo_connection():
    """Test endpoint for MongoDB connection and operations"""
    try:
        # Get collection
        collection = await MongoDB.get_collection("test_collection")
        
        # Insert a test document
        logger.info("Inserting test document through debug endpoint")
        test_doc = {"test": "debug", "message": "Testing MongoDB from API"}
        result = await collection.insert_one(test_doc)
        
        # Verify insertion
        if result.inserted_id:
            logger.info(f"Test document inserted with ID: {result.inserted_id}")
            
            # Find the document to verify
            found_doc = await collection.find_one({"_id": result.inserted_id})
            
            # Clean up
            await collection.delete_one({"_id": result.inserted_id})
            
            return {
                "success": True, 
                "message": "MongoDB connection and operations working correctly",
                "document_id": str(result.inserted_id),
                "document": {k: str(v) if k == "_id" else v for k, v in found_doc.items()}
            }
    except Exception as e:
        logger.error(f"MongoDB test failed: {str(e)}", exc_info=True)
        raise HTTPException(status_code=500, detail=f"MongoDB test failed: {str(e)}")

# Generated by Copilot
