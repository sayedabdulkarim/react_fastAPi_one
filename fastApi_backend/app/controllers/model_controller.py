import httpx
from fastapi import HTTPException
import os
from typing import List
from pydantic import BaseModel

class ModelInfo(BaseModel):
    name: str
    id: str
    size: str
    modified: str

class ModelController:
    @staticmethod
    async def get_all_models() -> List[ModelInfo]:
        try:
            async with httpx.AsyncClient() as client:
                response = await client.get(f"{os.getenv('OLLAMA_BASE_URL')}/api/tags")
                if response.status_code == 200:
                    models = response.json().get('models', [])
                    return [
                        ModelInfo(
                            name=model['name'],
                            id=model['digest'][:12],
                            size=f"{model['size']/(1024*1024*1024):.1f} GB",
                            modified=model['modified']
                        )
                        for model in models
                    ]
                raise HTTPException(status_code=response.status_code, detail="Failed to fetch models")
        except Exception as e:
            raise HTTPException(status_code=500, detail=str(e))

# Generated by Copilot
